name: Build and Deploy Next.js

on:
  push:
    branches:
      - dev

permissions:
  id-token: write  # OIDC를 이용한 AWS 인증
  contents: read   # actions/checkout을 위해 필요

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::160885287796:role/GithubActionsOIDC 
          role-session-name: GitHubActionsSession
          aws-region: ap-northeast-2 

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_NAME: frontend-repo
        run: |
          docker build -t $ECR_REGISTRY/$IMAGE_NAME:latest .
          docker push $ECR_REGISTRY/$IMAGE_NAME:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push  # ✅ 빌드 완료 후 실행
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::160885287796:role/GithubActionsOIDC
          role-session-name: GitHubActionsSession
          aws-region: ap-northeast-2

      - name: Trigger AWS CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name fe \
            --deployment-group-name fe-server \
            --s3-location bucket=testnet-spot-deploy,key=fe.zip,bundleType=zip
